type CachePurge {
  provisionerId: ID!
  workerType: String!
  cacheName: String!
  before: DateTime!
}

input PurgeCacheInput {
  cacheName: String
}

type PurgeCache {
  provisionerId: ID
  workerType: ID
}

type CachePurgesEdge implements Edge {
  cursor: String
  node: CachePurge
}

type CachePurgesConnection implements Connection {
  pageInfo: PageInfo
  edges: [CachePurgesEdge]
}

extend type Query {
  cachePurges(filter: JSON, connection: PageConnection): CachePurgesConnection
}

extend type Mutation {
  purgeCache(provisionerId: ID!, workerType: ID!, payload: PurgeCacheInput): PurgeCache
}
